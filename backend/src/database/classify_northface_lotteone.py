#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ÎÖ∏Ïä§ÌéòÏù¥Ïä§ Î°ØÎç∞Ïò® Í¥ÄÎ†® Í∏∞ÏÇ¨ ÏûêÎèô Î∂ÑÎ•ò Ïä§ÌÅ¨Î¶ΩÌä∏
2025ÎÖÑ 7Ïõî ÎÖ∏Ïä§ÌéòÏù¥Ïä§ ÌÇ§ÏõåÎìú Í∏∞ÏÇ¨ Ï§ë 'Î°ØÎç∞Ïò®'Ïù¥ Ìè¨Ìï®Îêú Í∏∞ÏÇ¨Îì§ÏùÑ 'Ïò§Í∞ÄÎãâ'ÏúºÎ°ú Î∂ÑÎ•òÌï©ÎãàÎã§.
"""

import sqlite3
from datetime import datetime

def classify_northface_lotteone_articles():
    """ÎÖ∏Ïä§ÌéòÏù¥Ïä§ Î°ØÎç∞Ïò® Í¥ÄÎ†® Í∏∞ÏÇ¨Îì§ÏùÑ 'Ïò§Í∞ÄÎãâ'ÏúºÎ°ú Î∂ÑÎ•ò"""
    
    conn = sqlite3.connect('db.sqlite')
    cursor = conn.cursor()
    
    try:
        # 2025ÎÖÑ 7Ïõî ÎÖ∏Ïä§ÌéòÏù¥Ïä§ Í¥ÄÎ†® ÎØ∏Î∂ÑÎ•ò Í∏∞ÏÇ¨ Ï§ë 'Î°ØÎç∞Ïò®' Ìè¨Ìï® Í∏∞ÏÇ¨ Ï°∞Ìöå
        cursor.execute('''
            SELECT a.id, a.url, a.title, a.keyword, a.pub_date, a.group_name, a.content
            FROM articles a
            LEFT JOIN classification_logs cl ON a.url = cl.url
            WHERE a.keyword = 'ÎÖ∏Ïä§ÌéòÏù¥Ïä§'
            AND DATE(a.pub_date) LIKE "2025-07-%"
            AND cl.url IS NULL
            AND a.title LIKE "%Î°ØÎç∞Ïò®%"
        ''')
        
        articles = cursor.fetchall()
        total_articles = len(articles)
        
        print(f"üöÄ ÎÖ∏Ïä§ÌéòÏù¥Ïä§ Î°ØÎç∞Ïò® Í¥ÄÎ†® Í∏∞ÏÇ¨ ÏûêÎèô Î∂ÑÎ•ò ÏãúÏûë")
        print("=" * 60)
        print(f"üìä Ï¥ù {total_articles}Í∞úÏùò ÎÖ∏Ïä§ÌéòÏù¥Ïä§ Î°ØÎç∞Ïò® Í∏∞ÏÇ¨Î•º Í≤ÄÏÇ¨Ìï©ÎãàÎã§...")
        print("-" * 60)
        
        if not articles:
            print("‚ùå Ï°∞Í±¥Ïóê ÎßûÎäî Í∏∞ÏÇ¨Í∞Ä ÏóÜÏäµÎãàÎã§.")
            return
        
        # Í∞Å Í∏∞ÏÇ¨ Ï∂úÎ†•
        for article in articles:
            article_id, url, title, keyword, pub_date, group_name, content = article
            print(f"üõçÔ∏è  {title[:70]}... ({pub_date})")
        
        print("-" * 60)
        print(f"üéØ Î°ØÎç∞Ïò® Í¥ÄÎ†® Í∏∞ÏÇ¨ {total_articles}Í∞ú Î∞úÍ≤¨")
        print(f"üöÄ {total_articles}Í∞ú Í∏∞ÏÇ¨Î•º ÏûêÎèôÏúºÎ°ú 'Ïò§Í∞ÄÎãâ'ÏúºÎ°ú Î∂ÑÎ•òÌï©ÎãàÎã§...")
        
        # classification_logsÏóê ÏÇΩÏûÖ
        classified_count = 0
        current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        
        for article in articles:
            article_id, url, title, keyword, pub_date, group_name, content = article
            
            try:
                cursor.execute('''
                    INSERT INTO classification_logs 
                    (url, keyword, group_name, title, content, classification_result, confidence_score, reason, is_saved, created_at)
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                ''', (
                    url,
                    keyword,
                    group_name,
                    title,
                    content,
                    'Ïò§Í∞ÄÎãâ',
                    1,
                    'Ïò®ÎùºÏù∏ ÌîåÎû´ÌèºÏóê ÎÖ∏Ïä§ÌéòÏù¥Ïä§Í∞Ä Ìï†Ïù∏ ÌîÑÎ°úÎ™®ÏÖòÏóê Ï∞∏Ïó¨ÌïúÎã§Îäî ÎÇ¥Ïö©Ïù¥ Ìè¨Ìï®ÎêòÏñ¥ ÏûàÏùå',
                    1,
                    current_time
                ))
                classified_count += 1
                print(f"‚úÖ Î∂ÑÎ•ò ÏôÑÎ£å: {title[:50]}...")
                
            except sqlite3.IntegrityError as e:
                print(f"‚ö†Ô∏è Ï§ëÎ≥µ URL Í±¥ÎÑàÎúÄ: {url}")
                continue
        
        # Î≥ÄÍ≤ΩÏÇ¨Ìï≠ Ï†ÄÏû•
        conn.commit()
        
        print("\n" + "=" * 60)
        print(f"‚úÖ ÏûëÏóÖ ÏôÑÎ£å!")
        print(f"üìä Ï¥ù {classified_count}Í∞úÏùò ÎÖ∏Ïä§ÌéòÏù¥Ïä§ Î°ØÎç∞Ïò® Í∏∞ÏÇ¨Î•º 'Ïò§Í∞ÄÎãâ'ÏúºÎ°ú Î∂ÑÎ•òÌñàÏäµÎãàÎã§.")
        print(f"üîó Î∂ÑÎ•ò Í≤∞Í≥º: Ïò§Í∞ÄÎãâ")
        print(f"üéØ Ïã†Î¢∞ÎèÑ: 1.0")
        print(f"üìù ÏÇ¨Ïú†: Ïò®ÎùºÏù∏ ÌîåÎû´ÌèºÏóê ÎÖ∏Ïä§ÌéòÏù¥Ïä§Í∞Ä Ìï†Ïù∏ ÌîÑÎ°úÎ™®ÏÖòÏóê Ï∞∏Ïó¨ÌïúÎã§Îäî ÎÇ¥Ïö©Ïù¥ Ìè¨Ìï®ÎêòÏñ¥ ÏûàÏùå")
        print("=" * 60)
        
        # Í≤∞Í≥º ÌôïÏù∏ - 2025ÎÖÑ 7Ïõî ÎÖ∏Ïä§ÌéòÏù¥Ïä§ Î∂ÑÎ•ò ÌòÑÌô©
        cursor.execute('''
            SELECT cl.classification_result, COUNT(*) as count
            FROM classification_logs cl
            JOIN articles a ON cl.url = a.url
            WHERE a.keyword = 'ÎÖ∏Ïä§ÌéòÏù¥Ïä§'
            AND DATE(a.pub_date) LIKE "2025-07-%"
            GROUP BY cl.classification_result
        ''')
        
        results = cursor.fetchall()
        print(f"\nüìà 2025ÎÖÑ 7Ïõî ÎÖ∏Ïä§ÌéòÏù¥Ïä§ Î∂ÑÎ•ò ÌòÑÌô©:")
        for result, count in results:
            print(f"  - {result}: {count}Í∞ú")
            
        # ÎØ∏Î∂ÑÎ•ò Í∏∞ÏÇ¨ Ïàò ÌôïÏù∏
        cursor.execute('''
            SELECT COUNT(*) as unclassified_count
            FROM articles a
            LEFT JOIN classification_logs cl ON a.url = cl.url
            WHERE a.keyword = 'ÎÖ∏Ïä§ÌéòÏù¥Ïä§'
            AND DATE(a.pub_date) LIKE "2025-07-%"
            AND cl.url IS NULL
        ''')
        
        unclassified_count = cursor.fetchone()[0]
        if unclassified_count > 0:
            print(f"  - ÎØ∏Î∂ÑÎ•ò: {unclassified_count}Í∞ú")
            
    except Exception as e:
        print(f"‚ùå Ïò§Î•ò Î∞úÏÉù: {str(e)}")
        conn.rollback()
        
    finally:
        conn.close()

if __name__ == "__main__":
    classify_northface_lotteone_articles() 